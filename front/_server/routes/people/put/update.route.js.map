{"version":3,"file":"update.route.js","sourceRoot":"","sources":["../../../../src/routes/people/put/update.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AACvD,6CAAiD;AACjD,+CAA0C;AAE1C,8CAAqC;AACrC,gDAA2D;AAE3D,gDAAkD;AAyBlD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC7B;;;OAGG;IACH,YAAoB,cAA6B,EAAU,OAAsB;QAA7D,mBAAc,GAAd,cAAc,CAAe;QAAU,YAAO,GAAP,OAAO,CAAe;IACjF,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACtE,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACN,CAAC;CACJ,CAAA;AAjBY,oBAAoB;IAvBhC,YAAK,CAAC;QACH,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE,mBAAQ,CAAC,MAAM,EAAE;gBACzB,OAAO,EAAE,uBAAY,CAAC,MAAM,CAAC,iBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACnD;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,uBAAY,CAAC,MAAM,EAAE;iBAC7B;aACJ;YACD,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,0FAA0F;YACjG,IAAI,EAAE,CAAE,KAAK,EAAE,QAAQ,CAAE;SAC5B;KACJ,CAAC;qCAMsC,wBAAa,EAAmB,sBAAa;GALxE,oBAAoB,CAiBhC;AAjBY,oDAAoB","sourcesContent":["import { OnPut, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Entity } from '@juneil/entityts';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { IdEntity, PersonEntity } from '../../../entities';\nimport { Person } from '../../../interfaces';\nimport { PeopleService } from '../../../services';\n\n@Route({\n    path: '/api/people/{id}',\n    method: 'PUT',\n    config: {\n        validate: {\n            params: IdEntity.schema(),\n            payload: PersonEntity.schema(Entity.Mode.UPDATE)\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                200: PersonEntity.schema()\n            }\n        },\n        description: 'Update one person',\n        notes: 'Update the person into the people array for the given id in path parameter and return it',\n        tags: [ 'api', 'people' ]\n    }\n})\nexport class PutUpdatePersonRoute implements OnPut {\n    /**\n     * Class constructor\n     * @param _peopleService\n     */\n    constructor(private _peopleService: PeopleService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnPut implementation\n     * @param request\n     */\n    onPut(request: Request): Observable<Person> {\n        return this._peopleService.update(request.params.id, request.payload).pipe(\n            tap(_ => this._logger.info(_))\n        );\n    }\n}\n"]}