{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/people/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA6E;AAC7E,6CAAiD;AACjD,+CAA0C;AAE1C,8CAAqC;AACrC,gDAAiD;AACjD,gDAAkD;AAwBlD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAC9B;;;OAGG;IACH,YAAoB,cAA6B,EAAU,OAAsB;QAA7D,mBAAc,GAAd,cAAc,CAAe;QAAU,YAAO,GAAP,OAAO,CAAe;IACjF,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACnD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACN,CAAC;CACJ,CAAA;AAjBY,qBAAqB;IAtBjC,YAAK,CAAC;QACH,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,OAAO,EAAE,uBAAY,CAAC,MAAM,CAAC,iBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACnD;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,uBAAY,CAAC,MAAM,EAAE;iBAC7B;aACJ;YACD,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,yDAAyD;YAChE,IAAI,EAAE,CAAE,KAAK,EAAE,QAAQ,CAAE;SAC5B;KACJ,CAAC;qCAMsC,wBAAa,EAAmB,sBAAa;GALxE,qBAAqB,CAiBjC;AAjBY,sDAAqB","sourcesContent":["import { HTTPHandlerResponse, OnPost, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Entity } from '@juneil/entityts';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PersonEntity } from '../../../entities';\nimport { PeopleService } from '../../../services';\n\n@Route({\n    path: '/api/people',\n    method: 'POST',\n    config: {\n        validate: {\n            payload: PersonEntity.schema(Entity.Mode.CREATE)\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                201: PersonEntity.schema()\n            }\n        },\n        description: 'Create one person',\n        notes: 'Create a new person into the people array and return it',\n        tags: [ 'api', 'people' ]\n    }\n})\nexport class PostCreatePersonRoute implements OnPost {\n    /**\n     * Class constructor\n     * @param _peopleService\n     */\n    constructor(private _peopleService: PeopleService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnPost implementation\n     * @param request\n     */\n    onPost(request: Request): Observable<HTTPHandlerResponse> {\n        return this._peopleService.create(request.payload).pipe(\n            tap(_ => this._logger.info(_))\n        );\n    }\n}\n"]}