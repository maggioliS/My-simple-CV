{"version":3,"file":"all.route.js","sourceRoot":"","sources":["../../../../src/routes/people/get/all.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AACvD,6CAAiD;AACjD,2BAA2B;AAE3B,8CAAqC;AACrC,gDAAiD;AAEjD,gDAAkD;AAkBlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC1B;;;OAGG;IACH,YAAoB,cAA6B,EAAU,OAAsB;QAA7D,mBAAc,GAAd,cAAc,CAAe;QAAU,YAAO,GAAP,OAAO,CAAe;IACjF,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;aAC/B,IAAI,CACD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACV,CAAC;CACJ,CAAA;AAlBY,iBAAiB;IAhB7B,YAAK,CAAC;QACH,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAClB,uBAAY,CAAC,MAAM,EAAE,CACxB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBACpB;aACJ;YACD,WAAW,EAAE,gBAAgB;YAC7B,KAAK,EAAE,mCAAmC;YAC1C,IAAI,EAAE,CAAE,KAAK,EAAE,QAAQ,CAAE;SAC5B;KACJ,CAAC;qCAMsC,wBAAa,EAAmB,sBAAa;GALxE,iBAAiB,CAkB7B;AAlBY,8CAAiB","sourcesContent":["import { OnGet, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport * as Joi from 'joi';\nimport { Observable } from 'rxjs/Observable';\nimport { tap } from 'rxjs/operators';\nimport { PersonEntity } from '../../../entities';\nimport { Person } from '../../../interfaces';\nimport { PeopleService } from '../../../services';\n\n@Route({\n    path: '/api/people',\n    method: 'GET',\n    config: {\n        response: {\n            status: {\n                200: Joi.array().items(\n                    PersonEntity.schema()\n                ).unique().min(1)\n            }\n        },\n        description: 'Get all people',\n        notes: 'Returns an array of people or 204',\n        tags: [ 'api', 'people' ]\n    }\n})\nexport class GetAllPeopleRoute implements OnGet {\n    /**\n     * Class constructor\n     * @param _peopleService\n     */\n    constructor(private _peopleService: PeopleService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnGet implementation\n     * @param request\n     */\n    onGet(request: Request): Observable<Person[] | void> {\n        return this._peopleService.listAll()\n            .pipe(\n                tap(_ => this._logger.info(_))\n            );\n    }\n}\n"]}